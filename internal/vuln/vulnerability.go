package vuln

import (
	"encoding/json"
	"fmt"
	"time"
)

type Vulnerability struct {
	ID           string    `json:"ID"`
	Name         string    `json:"Name"`
	Description  string    `json:"Description"`
	Severity     string    `json:"Severity"`
	CVSSScore    float64   `json:"CVSSScore"`
	CreatedOn    time.Time `json:"CreatedOn"`
	LastModified time.Time `json:"LastModified"`
	References   []string  `json:"References"`
}

func (v *Vulnerability) String() string {
	return fmt.Sprintf(
		"Vulnerability ID: %s\nName: %s\nSeverity: %s\nCVSS Score: %.2f\nDescription: %s\nReferences:\n%s",
		v.ID,
		v.Name,
		v.Severity,
		v.CVSSScore,
		v.Description,
		formatReferences(v.References),
	)
}
func formatReferences(refs []string) string {
	if len(refs) == 0 {
		return "None"
	}
	result := ""
	for _, ref := range refs {
		result += fmt.Sprintf("%s\n", ref)
	}
	return result
}

func GetVulnerabilitiesJSON(vulnerabilities []Vulnerability) ([]byte, error) {
	vulnerabilitiesJSON, err := json.Marshal(vulnerabilities)
	if err != nil {
		return nil, fmt.Errorf("error marshalling vulnerabilities to JSON: %w", err)
	}

	return vulnerabilitiesJSON, nil
}
