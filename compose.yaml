services:
  syntinel-server:
    container_name: syntinel-server
    image: syntinel-server:latest
    build:
      context: .
    stdin_open: true
    tty: true
    environment:
      - APP_ENV=
      - APP_PORT=
      - APP_CONFIG_PATH=
      - REDIS_URL=
      - DATABASE_URL=
      - CSRF_SECRET=
      - TLS_CERT_PATH=/app/data/server_cert.pem
      - TLS_KEY_PATH=/app/data/server_key.pem
      - ECDSA_PUBLIC_KEY_PATH=
      - ECDSA_PRIVATE_KEY_PATH=
    ports:
      - 8080:8080
    networks:
      - syntinel-network
    volumes:
      - /srv/syntinel-server:/app/data
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - /srv/syntinel-server/redis_data:/data
    networks:
      - syntinel-network
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=
      - POSTGRES_SSL_CERT_FILE=/etc/postgresql/certs/server_cert.pem
      - POSTGRES_SSL_KEY_FILE=/etc/postgresql/certs/server_key.pem
      - POSTGRES_SSL_CA_FILE=/etc/postgresql/certs/ca_cert.pem
    ports:
      - 5432:5432
    networks:
      - syntinel-network
    volumes:
      - /srv/syntinel-server/postgres_data:/var/lib/postgresql/data
      - /srv/syntinel-server/server_cert.pem:/etc/postgresql/certs/server_cert.pem:ro
      - /srv/syntinel-server/server_key.pem:/etc/postgresql/certs/server_key.pem:ro
      - /srv/syntinel-server/ca_cert.pem:/etc/postgresql/certs/ca_cert.pem:ro
    entrypoint: ["sh", "-c", "chown -R postgres:postgres /etc/postgresql/certs && exec gosu postgres postgres -c ssl=on -c ssl_cert_file=/etc/postgresql/certs/server_cert.pem -c ssl_key_file=/etc/postgresql/certs/server_key.pem -c ssl_ca_file=/etc/postgresql/certs/ca_cert.pem"]
    restart: always

networks:
  syntinel-network:
    driver: bridge
